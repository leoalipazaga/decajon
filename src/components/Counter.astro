---
import type { HTMLAttributes } from 'astro/types'
import Button from './Button.astro'
import Tag from './Tag.astro'

type Props = HTMLAttributes<'span'>

const { class: className, ...rest } = Astro.props
---

<Tag
  id="counter"
  {...rest}
  class:list={[
    'flex min-w-36 flex-row items-center justify-between [&&]:p-1',
    className,
  ]}
>
  <Button
    class="font-bold text-anti-flash-white [&&]:h-7 [&&]:w-7"
    variant="rounded"
    id="counter__next">+</Button
  >
  <span class="w-4 text-center font-bold" id="counter__value">1</span>
  <Button
    class="font-bold text-anti-flash-white [&&]:h-7 [&&]:w-7"
    variant="rounded"
    id="counter__prev">-</Button
  >
</Tag>
<script>
  const $$ = document.querySelectorAll.bind(document)
  const $counters = $$('#counter')
  $counters.forEach(($counter) => {
    let current = 1
    const $next = $counter.querySelector('#counter__next')
    const $prev = $counter.querySelector('#counter__prev')
    const $counterValue = $counter.querySelector('#counter__value')
    $next?.addEventListener('click', () => {
      current += 1
      if ($counterValue) {
        $counterValue.textContent = `${current}`
      }
    })
    $prev?.addEventListener('click', () => {
      current = Math.max(1, current - 1)
      if ($counterValue) {
        $counterValue.textContent = `${current}`
      }
    })
  })
</script>
