---
import { Image } from 'astro:assets'
import AngleLeft from 'icons/long-left-arrow.svg'
import AngleRight from 'icons/long-right-arrow.svg'
import Button from './Button.astro'
---

<div
  id="carousel-wrapper"
  class="grid grid-cols-2 grid-rows-[auto_auto] items-center gap-8 md:grid-cols-[auto_1fr_auto] md:grid-rows-[auto]"
>
  <Button
    class="col-start-1 row-start-2 justify-self-end md:col-start-1 md:row-start-1"
    variant="rounded"
    id="prev-button"
  >
    <Image src={AngleLeft} alt="left icon" />
  </Button>
  <div
    class="col-span-2 col-start-1 row-start-1 flex-shrink flex-grow basis-0 overflow-x-hidden md:col-span-1 md:col-start-2"
    id="caroulse-slider"
  >
    <div class="flex transition-transform ease-linear" id="carousel-content">
      <slot />
    </div>
  </div>
  <Button
    class="col-start-2 row-start-2 md:col-start-3 md:row-start-1"
    variant="rounded"
    id="next-button"
  >
    <Image src={AngleRight} alt="right icon" />
  </Button>
</div>
<script>
  const leftButton = document.querySelector('#prev-button')
  const rightButton = document.querySelector('#next-button')
  const carouselContentEl = document.querySelector('#carousel-content')
  const itemsCount = carouselContentEl?.children.length ?? 0
  let counter = 0
  leftButton?.addEventListener('click', () => {
    counter = !counter ? itemsCount - 1 : counter - 1
    const translateWidth = -100 * counter
    carouselContentEl?.setAttribute(
      'style',
      `transform: translateX(${translateWidth}%)`
    )
  })
  rightButton?.addEventListener('click', () => {
    counter = counter >= itemsCount - 1 ? 0 : counter + 1
    const translateWidth = -100 * counter
    carouselContentEl?.setAttribute(
      'style',
      `transform: translateX(${translateWidth}%)`
    )
  })
</script>
